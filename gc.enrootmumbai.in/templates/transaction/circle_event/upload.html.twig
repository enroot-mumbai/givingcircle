{% extends 'layout/content.html.twig' %}

{% macro uploadDocumentContent(form) %}
    <div class="col-sm-12 trnCircleEventUploadedDocuments">
        <div class="row mt-3">
            <div class="col-sm-3">
                {{ form_row(form.mediaName) }}
            </div>
            <div class="col-sm-3">
                {{ form_row(form.mstUploadDocumentType) }}
            </div>
            <div style="display: none;" class="col-sm-3 imageDiv">
                {{ form_row(form.uploadedFilePath) }}
            </div>
        </div>
        <div class="row mt-3">
            <div style="display: none;" class="col-sm-3 imageDiv">
                {{ form_row(form.mediaAltText) }}
            </div>
            <div style="display: none;" class="col-sm-3 imageDiv">
                {{ form_row(form.mediaTitle) }}
            </div>
            <div style="display: none;" class="col-sm-3 imageDiv">
                {{ form_row(form.mediaFileName) }}
            </div>
            <div style="display: none;" class="col-sm-3 videoDiv">
                {{ form_row(form.mediaURL) }}
            </div>
        </div>
        <div class="col-sm-4 removebutton mb-4"> <br>
            <button type="button" class="btn btn-danger btn-sm "><i class="fa fa-trash"></i> Remove Content
                Block</button>
        </div>
    </div>
{% endmacro %}
{% import _self as formMacro %}
{% block cms_content %}
    {% set back_to_list = app.request.server.get('HTTP_REFERER') %}
    <div class="card">
        <div class="card-header">
            <h5 class="card-title">
                <b>{{label_title|trans|upper}}</b> :- {{ 'label.upload_image'|trans|upper }}
            </h5>
        </div>
        {{ form_start(form) }}
        <div class="card-body">
            <div class="row recurringDetails" data-prototype="{{ formMacro.uploadDocumentContent(form
                .trnCircleEventUploadedDocuments
                .vars.prototype)|e('html_attr') }}">
                <div class="col" id="uploadDocumentContent" >
                    {% for row in form.trnCircleEventUploadedDocuments %}
                        {{ formMacro.uploadDocumentContent(row) }}
                    {% endfor %}
                </div>
            </div>
            <div class="row">
                <div class="col-sm-3">
                    <button type="button" id="addCircleUploadDocumentContent" class="btn btn-dark btn-sm"><i
                                class="fa fa-plus"></i> Add Content Block</button>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <button type="submit" class="{{ button_css|default("btn btn-dark btn-sm") }}">
                <i class="fa fa-save" aria-hidden="true"></i> {{ label_button|trans }}
            </button>
            <a href="{{ back_to_list }}" class="btn btn-link"><i class="fa fa-list-alt" aria-hidden="true"></i> {{ 'action.back_to_list'|trans }}</a>
        </div>
        {{ form_end(form) }}
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <link href="{{ asset('assets/plugins/summernote/summernote-bs4.css') }}" media="all" rel="stylesheet" type="text/css" />
    <script src="{{ asset('assets/plugins/summernote/summernote-bs4.min.js') }}" type="text/javascript"></script>
    {#    <script src="{{ asset('assets/plugins/bootstrap-switch/js/bootstrap-switch.min.js') }}" type="text/javascript"></script>#}
    <script src="{{ asset('assets/js/transaction/circle_event/index.js') }}"></script>
    <script>
        $(function () {
            // Summernote
            $(".textarea").summernote({
                height: 200,
                toolbar: [
                    // [groupName, [list of button]]
                    ['style', ['bold', 'italic', 'underline']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['table', ['table']],
                    ['insert', ['link']],
                    ['view', ['fullscreen', 'codeview', 'help']],
                ]
            });

            jQuery('.uploadDocumentType').each(function( index ){
                switch(jQuery(this).find("option:selected").text().toLowerCase()) {
                    case 'image':{
                        jQuery(this).closest('.trnCircleEventUploadedDocuments').find('.imageDiv').each(function( index ){
                            jQuery(this).show();
                        });
                        break;
                    }
                    case 'video':{
                        jQuery(this).closest('.trnCircleEventUploadedDocuments').find('.videoDiv').each(function( index ){
                            jQuery(this).show();
                        });
                        break;
                    }
                }
            });
        })

        jQuery(document).on('click', '.btn-danger', function (e) {
            jQuery(this).parent().parent().remove()
        });

        jQuery(document).on('change', ".uploadDocumentType", function(e) {
            var index = jQuery(this).attr('index');
            jQuery('.imageDiv'+index).hide();
            jQuery('.videoDiv'+index).hide();
            switch(jQuery(this).find("option:selected").text().toLowerCase()) {
                case 'image':{
                    jQuery('.imageDiv'+index).show();
                    break;
                }
                case 'video':{
                    jQuery('.videoDiv'+index).show();
                    break;
                }
            }
        });

        //Fund Raiser Event Sub Events
        $collectionHolderSubEvent = jQuery('#uploadDocumentContent').parent();
        $collectionHolderSubEvent.data('index', jQuery('#uploadDocumentContent').find('.trnCircleEventUploadedDocuments').length);

        jQuery("#addCircleUploadDocumentContent").on('click', function (e) {
            addRowContentFormSubEvent($collectionHolderSubEvent);
        });

        function addRowContentFormSubEvent($collectionHolderSubEvent) {
            // Get the data-prototype explained earlier
            var prototype = $collectionHolderSubEvent.data('prototype');

            // get the new index
            var index = $collectionHolderSubEvent.data('index');
            var newForm = prototype;
            newForm = newForm.replace(/__name__/g, index);
            newForm = newForm.replace(/__index__/g, index);
            newForm = newForm.replace(/imageDiv/g, 'imageDiv'+index);
            newForm = newForm.replace(/videoDiv/g, 'videoDiv'+index);

            // increase the index with one for the next item
            $collectionHolderSubEvent.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a tag" link li
            jQuery('#uploadDocumentContent').append(newForm)
        }
        //Fund Raiser Event Sub Events Ends

    </script>
{% endblock %}